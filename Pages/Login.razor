@page "/login"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<h3>Login</h3>

<div class="form-group">
    <label>
        User:
        <input @bind="userInput" />
    </label>
</div>
<div class="form-group">
    <label>
        Message:
        <input @bind="messageInput" size="50" />
    </label>
</div>
<button @onclick="DoLogin" disabled="@(!IsConnected)">Login</button>


<hr>

<ul id="messagesList">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection? hubConnectionLogin;

    private List<string> messages = new List<string>();
    private string? userInput;
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnectionLogin = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/loginhub"))
            .Build();

        hubConnectionLogin.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            InvokeAsync(StateHasChanged);
        });


        await hubConnectionLogin.StartAsync();
    }

    private async Task DoLogin()
    {
        if (hubConnectionLogin is not null)
        {
            await hubConnectionLogin.SendAsync("SendMessage", userInput, messageInput);
        }
    }
   

    public bool IsConnected =>
        hubConnectionLogin?.State == HubConnectionState.Connected;

   

    public async ValueTask DisposeAsync()
    {
        if (hubConnectionLogin is not null)
        {
            await hubConnectionLogin.DisposeAsync();
        }
      
    }
}